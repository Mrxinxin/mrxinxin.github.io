<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[IIS添加ssl证书]]></title>
    <url>%2FIIS%E6%B7%BB%E5%8A%A0ssl%E8%AF%81%E4%B9%A6%2F</url>
    <content type="text"><![CDATA[1 申请证书，以腾讯云为例 登录腾讯云控制台并找到ssl证书管理,然后点击申请证书。 填写证书信息。 单击“下一步”，在域名身份验证页面单击“确认申请”。 切换到SSL证书管理控制台，在证书列表下找到目标证书（即刚才申请的证书），然后单击目标证书右侧的“详情” 2 配置DNS解析 在主域名那里添加相关的CNAME记录，用来做手动DNS验证。记录类型：TXT，主机记录：可以在证书详情中找到,线路：默认线路，记录值：可以在证书详情中找到，TTL：6003 安装证书 切换到目标证书详情，单击“下载”，把证书下载到本地，然后通过ftp工具上传至服务器指定目录（也可以在Windows客户机远程连接配置共享磁盘）。 在下载的证书里面，包含Apache、IIS、Tomcat、Nginx四种Web服务器的配置证书，此处我们只需要IIS的证书。 打开IIS控制台，在IIS中找到“服务器证书”,点击导入，找到证书的位置，输入密码（可在证书位置的同级找到一个keystorepass.txt的文件中找到）。 点击网站下需要绑定的站点，右击找到“编辑绑定”,弹出页面里选择https,端口443，ssl证书在下拉框中找到，确定即可]]></content>
      <categories>
        <category>运维</category>
        <category>SSL</category>
      </categories>
      <tags>
        <tag>IIS</tag>
        <tag>Https</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git使用]]></title>
    <url>%2Fgit%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[显示单个文件的修改记录默认在git仓库中输入1$ git log 会显示所有文件的修改log记录。如果我们只想看项目中某一个文件的修改记录，可以输入以下命令：1$ git log -p xxx(文件名) 恢复单个文件到历史版本12$ git reset commit_id 文件路径$ git checkout -- 文件路径]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git拉取远程分支到本地]]></title>
    <url>%2Fgit%E6%8B%89%E5%8F%96%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF%E5%88%B0%E6%9C%AC%E5%9C%B0%2F</url>
    <content type="text"><![CDATA[一、查看远程分支1234git branch -r origin/HEAD -&gt; origin/master origin/dev origin/master 二、拉取远程分支并创建本地分支1git checkout -b 本地分支名 origin/远程分支名]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[克隆一个带子模块的项目]]></title>
    <url>%2F%E5%85%8B%E9%9A%86%E4%B8%80%E4%B8%AA%E5%B8%A6%E5%AD%90%E6%A8%A1%E5%9D%97%E7%9A%84%E9%A1%B9%E7%9B%AE%2F</url>
    <content type="text"><![CDATA[方法一1git clone --recursive 项目地址 Cloning into &apos;testblog&apos;... remote: Enumerating objects: 295, done. remote: Counting objects: 100% (295/295), done. remote: Compressing objects: 100% (243/243), done. remote: Total 295 (delta 38), reused 251 (delta 19) KiB/s Receiving objects: 100% (295/295), 1.63 MiB | 29.00 KiB/s, done. Resolving deltas: 100% (38/38), done. Submodule &apos;themes/next&apos; (https://github.com/bianxinxin/hexo-theme-next) registered for path &apos;themes/next&apos; Cloning into &apos;D:/Code/testblog/themes/next&apos;... remote: Counting objects: 12041, done. remote: Compressing objects: 100% (7/7), done. remote: Total 12041 (delta 0), reused 4 (delta 0), pack-reused 12034 Receiving objects: 100% (12041/12041), 12.99 MiB | 194.00 KiB/s, done. Resolving deltas: 100% (6963/6963), done. Submodule path &apos;themes/next&apos;: checked out &apos;54d65412c9351cf2ff11e6b0cc1ee426a9529f97&apos; 方法二1git clone 仓库地址 克隆该项目 克隆下来后只会发现子模块并没有一起克隆下来，需要将子模块也克隆下来。 git submodule init 初始化你的本地配置文件 git submodule update 从那个项目拉取所有数据并检出你上层项目里所列的合适的提交 报错处理 如果如下错误： 12Please make sure you have the correct access rightsfatal: Could not read from remote repository. 是因为没有子模块的操作权限导致的，添加权限。 git submodule update 报如下错误：123$ git submodule update --init fatal: Needed a single revision Unable to find current revision in submodule path ’xxx子模块库名xxx’ 解决12rm -rf xxx子模块库名xxxgit submodule update --init]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>submodule</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计算文件的MD5/SHA1/SHA256等校验值]]></title>
    <url>%2F%E8%AE%A1%E7%AE%97%E6%96%87%E4%BB%B6%E7%9A%84MD5-SHA1-SHA256%E7%AD%89%E6%A0%A1%E9%AA%8C%E5%80%BC%2F</url>
    <content type="text"><![CDATA[Windows10certutil支持的算法有：MD2 MD4 MD5 SHA1 SHA256 SHA384 SHA512certutil的使用方法非常简单，只需要执行“certutil -hashfile 文件名 校验值类型”，即可计算出对应文件的校验值。例如：计算D:\test.txt这个文件的MD5，可以执行命令：1certutil -hashfile D:\test.txt MD5 Linux123$ md5sum /works/test.txt $ sha1sum /works/test.txt $ sha256sum /works/test.txt]]></content>
      <categories>
        <category>校验值</category>
      </categories>
      <tags>
        <tag>md5</tag>
        <tag>sha256</tag>
      </tags>
  </entry>
</search>
